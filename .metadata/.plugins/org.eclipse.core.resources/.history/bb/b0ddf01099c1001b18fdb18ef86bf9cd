package com.cea.estoqueLx.services;

import java.util.ArrayList;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

import com.cea.estoqueLx.dto.UserDTO;

@Service
public class JwtUserDetailsService implements UserDetailsService {

	@Autowired
    private UserService userService;
	
	@Override
	public UserDetails loadUserByUsername (String email) throws UsernameNotFoundException {
		
		UserDTO dto = userService.getByEmail(email);
		
		try {
			
				return new User(dto.getEmail(), dto.getPassword(),
						new ArrayList<>());


				
		} catch (java.lang.NullPointerException e) {
			
			System.out.println("Usuário não encontrado1! " + e);
			throw new UsernameNotFoundException("User not found with email: " + email);
			
		} catch (UsernameNotFoundException e2) {
			
			System.out.println("Usuário não encontrado2! " + e2);
			throw new UsernameNotFoundException("User not found with email: " + email);
			
		}		
		
		
		
		/*UserDTO dto = userService.getByEmail(email);
		
		boolean teste  = (dto != null);		
		
		if(dto != null) {
			
			System.out.println("Usuário encontrado " + teste + " " + dto.getEmail());
			return new User(dto.getEmail(), dto.getPassword(),
					new ArrayList<>());
			
		} else {
			
			System.out.println("Usuário não encontrado " + teste + dto.getEmail());
			throw new UsernameNotFoundException("User not found with email: " + email);
		}
		
		if (dto.getEmail().equals(email)) {
			return new User(email, dto.getPassword(),
					new ArrayList<>());
		} else {
			
			System.out.println("User not found with email: " + email);
			throw new UsernameNotFoundException("User not found with email: " + email);
			
		}*/
	}
	
	
}

