package com.cea.estoqueLx.controller;

import java.net.URI;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;

import com.cea.estoqueLx.dto.ProductDTO;
import com.cea.estoqueLx.services.ProductService;


@RestController
public class ProductController {
	
	@Autowired
	private ProductService service;
	
	@RequestMapping("/products")
	public ResponseEntity<ProductDTO> insert (@RequestBody ProductDTO dto){
		dto = service.insert(dto);
				
		URI uri = ServletUriComponentsBuilder.fromCurrentRequest().path("/{id}")
				.buildAndExpand(dto.getId()).toUri();
		return ResponseEntity.created(uri).body(dto);
	}
	
	@RequestMapping("/products/all")
	@GetMapping
	public ResponseEntity<List<ProductDTO>> findAll() {
		List<ProductDTO> list = service.findAll();
		return ResponseEntity.ok().body(list);
	}
	
	
	/*@DeleteMapping("/products/{id}")
	public void delete (@PathVariable Long id){
		service.delete(id);
	}*/
	
	@DeleteMapping("/products/{id}")
	public Map<String, Boolean> delete (@PathVariable Long id) throws Exception{
		service.
	}
	
	
	@PutMapping("/products/{id}")
	public ResponseEntity<ProductDTO> put (@RequestBody ProductDTO dto){
		dto = service.update(dto);
		URI uri = ServletUriComponentsBuilder.fromCurrentRequest().path("/{id}")
				.buildAndExpand(dto.getId()).toUri();
		return ResponseEntity.created(uri).body(dto);
	}
	
	@GetMapping(path = {"/products/findByNameList/{name}"})
	public ResponseEntity<List<ProductDTO>>findByNameList(@PathVariable String name){
		List<ProductDTO> list = service.loadUserByNameList(name);
		return ResponseEntity.ok().body(list);
	}
	

}
